package com.example.nagoyameshi.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.example.nagoyameshi.entity.Menu;
import com.example.nagoyameshi.entity.Store;
import com.example.nagoyameshi.form.MenuRegisterForm;
import com.example.nagoyameshi.repository.MenuRepository;
import com.example.nagoyameshi.repository.StoreRepository;
import com.example.nagoyameshi.service.MenuService;

@Controller
@RequestMapping("/admin/stores/{id}/menus")
public class AdminMenuController {
	private final MenuRepository menuRepository;
	private final StoreRepository storeRepository;
	private final MenuService menuService;
	
	public AdminMenuController(MenuRepository menuRepository, StoreRepository storeRepository, MenuService menuService) {
		this.menuRepository = menuRepository;
		this.storeRepository = storeRepository;
		this.menuService = menuService;
	}

	@GetMapping
	private String index(@PathVariable(name = "id")Integer id, Model model) {
		Store store = storeRepository.getReferenceById(id);
		List<Menu> menuList = menuRepository.findByStore(store);
		Menu menu = menuRepository.getReferenceById(id);
		int price = (int)(menu.getPrice() * 1.1);
		
		model.addAttribute("store", store);
		model.addAttribute("menu", menu);
		model.addAttribute("price", price);
		
		return "admin/menus/index";
	}
	
	@GetMapping("/register")
	public String register(Model model) {
	   
	    model.addAttribute("MenuRegisterForm", new MenuRegisterForm());
		
		return "admin/menus/register";
	}
	
	@PostMapping("/create")
	public String create(@ModelAttribute @Validated MenuRegisterForm menuRegisterForm, BindingResult bindingResult, RedirectAttributes redirectAttributes) {
		if(bindingResult.hasErrors()) {
			return "admin/menus/register";
		}
		
		menuService.create(menuRegisterForm);
		redirectAttributes.addFlashAttribute("successMessage", "メニューを登録しました。");
		
		return "redirect:/admin/menus";
	}
	
//	create.register,edit.update,deleteを記載
	
}

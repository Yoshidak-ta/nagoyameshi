package com.example.nagoyameshi.controller;

import org.springframework.data.domain.Page;
import org.springframework.data.web.PageableDefault;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.example.nagoyameshi.entity.Review;
import com.example.nagoyameshi.entity.Store;
import com.example.nagoyameshi.form.ReviewForm;
import com.example.nagoyameshi.repository.ReviewRepository;
import com.example.nagoyameshi.repository.StoreRepository;
import com.example.nagoyameshi.security.UserDetailsImpl;

@Controller
@RequestMapping("/stores/{storeId}/reviews")
public class ReviewController {
	private final ReviewRepository reviewRepository;
	private final StoreRepository storeRepository;
	private final ReviewService reviewService;
	
	public ReviewController(ReviewRepository reviewRepository, StoreRepository storeRepository, ReviewService reviewService) {
		this.reviewRepository = reviewRepository;
		this.storeRepository = storeRepository;
		this.reviewService = reviewService;
	}
	
	@GetMapping
	public String index(@PathVariable(name = "storeId")Integer storeId, @PageableDefault(page = 0, size = 10, sort = "id")Pageable pageable, Model model) {
		Store store = storeRepository.getReferenceById(storeId);
		Page<Review> reviewPage = reviewRepository.findByStoreOrderByCreatedAtDesc(store, pageable);
		
		model.addAttribute("store", store);
		model.addAttribute("reviewPage", reviewPage);
		
		return "reviews/index";
	}
	
	@GetMapping("/register")
	public String register(@PathVariable(name = "storeId")Integer storeId, Model model) {
		Store store = storeRepository.getReferenceById(storeId);
		
		model.addAttribute("store", store);
		model.addAttribute("reviewForm", new ReviewForm());
		
		return "reviews/register";
	}
	
	@PostMapping("/create")
	public String create(@PathVariable(name = "storeId")Integer storeId,
			             @AuthenticationPrincipal UserDetailsImpl userdetailsImpl,
			             @ModelAttribute @Validated ReviewForm reviewForm,
			             BindingResult bindingResult,
			             RedirectAttributes redirectAttributes,
			             Model model) {
		Store store = storeRepository.getReferenceById(storeId);
		User user = userdetailsImpl.getUser();
	}
	
	

}
